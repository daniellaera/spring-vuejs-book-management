-- V4: Add comments table with user_id and populate initial data
CREATE TABLE _comment
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     TEXT NOT NULL,
    book_id     INTEGER NOT NULL,
    user_id     INTEGER NOT NULL,  -- New field for storing user reference
    CONSTRAINT fk_book FOREIGN KEY (book_id) REFERENCES _book (id) ON DELETE CASCADE,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES _user (id) ON DELETE CASCADE -- Reference to user
);

-- Step 2: Insert initial comments for existing books
-- Adding comments for the book 'Spring Boot Basics' (book_id = 1)
-- Assume user_id for each comment
INSERT INTO _comment (content, book_id, user_id)
VALUES
    ('Excellent book for beginners!', 1, 1),  -- User 1
    ('Helped me start with Spring Boot.', 1, 2); -- User 2

-- Adding comments for the book 'Advanced Java Programming' (book_id = 2)
INSERT INTO _comment (content, book_id, user_id)
VALUES
    ('Very detailed and insightful.', 2, 2),  -- User 2
    ('Perfect for experienced developers.', 2, 3); -- User 3

-- Adding comments for the book 'Data structures and Algorithms' (book_id = 3)
INSERT INTO _comment (content, book_id, user_id)
VALUES
    ('Clear explanations of algorithms.', 3, 3),  -- User 3
    ('Great reference for coding interviews.', 3, 4); -- User 4

-- Adding comments for the book 'Spring 6 and Boot 3' (book_id = 4)
INSERT INTO _comment (content, book_id, user_id)
VALUES
    ('Comprehensive Spring coverage.', 4, 4),  -- User 4
    ('Loved the practical examples.', 4, 1); -- User 1